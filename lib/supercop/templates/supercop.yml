# FYI: 'cmd', 'options' and 'max' are required.
# 'path', 'git', 'version' and 'path' are optional params for installation.
# 'version' would not work with 'path' param.
# 'path' option is more priority and overrides 'git' option.
#
# File Format:
#
# linter: - gem name of linter to download
#   cmd*: - command that run in command line
#   option*: - options for cmd command to run. Please spcify here json output for normal parsing
#   version: - version of gem to install
#   git: - repo for gem download
#   path: - local file system path to gem. It overrides git option
#   max*: - maximum errors for linter to define ok or fail status of check
#
#   * - required
#
# `Please note`, that you should specify JSON output param for correct parsing
#
# Example:
#
# rubocop:
#   cmd: 'rubocop'
#   options: '--jormat default'
#   path: '/home/developer/rubocopgem/'
#   version: '1.0.1'
#   max: 20
#
# With git param:
#
# rubocop:
#   cmd: 'rubocop'
#   options: '--jormat default'
#   git: 'git@github.com/developer/rubocop.git'
#   version: '1.0.1'
#
# `Important!`
#
# Please use gem names for the configuration keys, like you add it to your gemfile
# For example:
# Correct:
#
# sccs_lint:
#   cmd: 'scss-lint'
#   version: '0.69'
#
# Incorrect - it wouldn't work
#
# scss-lint:
#   cmd: 'scss-lint'
#   version: '0.69'
# 
# Template config fo rails project with slim
# max: &max_quantity
#   max: 99
# verbose: false
# config:
#   rubocop:
#     cmd: 'rubocop'
#     options: '--format json'
#     git: 'git@github.com:bbatsov/rubocop.git'
#     version: '~0.49'
#     <<: *max_quantity
#   slim_lint:
#     cmd: 'slim-lint'
#     options: 'app/views --reporter json'
#     version: '~> 0.13.0'
#     <<: *max_quantity
#   scss_lint:
#     cmd: 'scss-lint'
#     options: 'app/assets --format JSON'
#     <<: *max_quantity

max: &max_quantity
  max: 99
verbose: false
config:
  rubocop:
    cmd: 'rubocop'
    options: '--format json'
    git: 'git@github.com:bbatsov/rubocop.git'
    <<: *max_quantity
  reek:
    cmd: 'reek'
    options: '--format json'
    <<: *max_quantity